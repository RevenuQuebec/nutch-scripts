#!/bin/sh

SCRIPTS_DIR=`dirname "${0}"`
CRAWL_SCRIPT=$SCRIPTS_DIR/crawl
REINDEX_SCRIPT=$SCRIPTS_DIR/reindex

do_core() {
    # Create a backup of the crawl DB, just in case
    cp -R $HOME/crawl-${1} $BACKUPS_DIR/crawl-${1}-$DATE
    if [ $? -ne 0 ]; then
        echo "${1}: Not enough space to create the backup";
        rm -rf $BACKUPS_DIR/crawl-${1}-$DATE;
        return 1;
    fi

    CRAWL_OUT_LOG=$LOGS_DIR/OUT-crawl-${1}-$DATE.log
    CRAWL_ERR_LOG=$LOGS_DIR/ERROR-crawl-${1}-$DATE.log
    REINDEX_OUT_LOG=$LOGS_DIR/OUT-reindex-${1}-$DATE.log
    REINDEX_ERR_LOG=$LOGS_DIR/ERROR-reindex-${1}-$DATE.log

    # Crawl the website
    $CRAWL_SCRIPT $1 > $CRAWL_OUT_LOG 2> $CRAWL_ERR_LOG;
    RET_CODE=$?
    # Delete the error log if it is empty
    if [ ! -s $CRAWL_ERR_LOG ]; then
        rm -rf $CRAWL_ERR_LOG;
    fi

    # If an error happened while crawling the website, we must restore the crawldb directory from a backup
    if [ $RET_CODE -ne 0 ]; then
        echo "${1}: Crawl failed, restoring backup";
        rm -rf $HOME/crawl-${1};
        mv $BACKUPS_DIR/crawl-${1}-$DATE $HOME/crawl-${1};
        return 1;
    else
        # Reindex all pages
        $REINDEX_SCRIPT $1 > $REINDEX_OUT_LOG 2> $REINDEX_ERR_LOG
        RET_CODE=$?

        # Check if reindexation failed
        if [ $RET_CODE -eq 0 ]; then
            # Delete the error log if it is empty
            if [ ! -s $REINDEX_ERR_LOG ]; then
                rm -rf $REINDEX_ERR_LOG;
            fi
        else
            echo "${1}: Reindexation failed";
            return 1;
        fi
    fi
}

check_status() {
    RETCODE=$?;
    if [ $RETCODE -ne 0 ]; then
        exit $RETCODE
    fi
}

LOGS_DIR=$1
BACKUPS_DIR=$2
if [ "$1" = "" ] || [ "$2" = "" ]; then
    echo "You must provide the path to the logs and backups directories (ex: ./search-cron ./logs ./backups)"
else
    if [ ! -e $LOGS_DIR ]; then
        mkdir -p $LOGS_DIR; check_status;
    fi
    if [ ! -e $BACKUPS_DIR ]; then
        mkdir -p $BACKUPS_DIR; check_status;
    fi

    DATE=`date +\%Y-\%m-\%d-\%H\%M`

    do_core rq-fr; check_status;
    do_core rq-en; check_status;

    # The Hadoop tmp directory can take all available space
    HADOOP_TMP_DIR=/tmp/hadoop-$USER
    if [ -e $HADOOP_TMP_DIR ]; then
        rm -rf $HADOOP_TMP_DIR;
    fi
fi
